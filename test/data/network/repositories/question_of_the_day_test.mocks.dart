// Mocks generated by Mockito 5.4.4 from annotations
// in mituna/test/data/network/repositories/question_of_the_day_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mituna/data/network/entities/question_of_the_day.dart' as _i5;
import 'package:mituna/data/network/services/question_of_the_day.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:retrofit/retrofit.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpResponse_0<T> extends _i1.SmartFake
    implements _i2.HttpResponse<T> {
  _FakeHttpResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [QuestionOfTheDayService].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestionOfTheDayService extends _i1.Mock
    implements _i3.QuestionOfTheDayService {
  MockQuestionOfTheDayService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.HttpResponse<_i5.QuestionOfTheDayData>>
      getQuestionOfTheDay() => (super.noSuchMethod(
            Invocation.method(
              #getQuestionOfTheDay,
              [],
            ),
            returnValue:
                _i4.Future<_i2.HttpResponse<_i5.QuestionOfTheDayData>>.value(
                    _FakeHttpResponse_0<_i5.QuestionOfTheDayData>(
              this,
              Invocation.method(
                #getQuestionOfTheDay,
                [],
              ),
            )),
          ) as _i4.Future<_i2.HttpResponse<_i5.QuestionOfTheDayData>>);
}
